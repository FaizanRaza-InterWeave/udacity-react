import { Link } from "react-router-dom";
import { Book } from "../components/Book";
import { useState } from "react";

export const SearchBooks = ({ books, setBooks }) => {
  const [searchTerm, setSearchTerm] = useState("");
  const booksToDisplay = books.filter(
    (book) =>
      book.title.includes(searchTerm) ||
      arrayContainsSubstring(book.authors, searchTerm) ||
      arrayOfObjectsContainsSubstring(book.industryIdentifiers, searchTerm)
  );
  return (
    <div className="search-books">
      <div className="search-books-bar">
        <Link className="close-search" to="/"></Link>
        <div className="search-books-input-wrapper">
          <input
            type="text"
            placeholder="Search by title, author, or ISBN"
            value={searchTerm}
            onChange={(event) => {
              setSearchTerm(event.target.value);
            }}
          />
        </div>
      </div>
      <div className="search-books-results">
        <div className="bookshelf-books">
          <ol className="books-grid"></ol>
          {booksToDisplay.map((book) => (
            <Book book={book} books={books} setBooks={setBooks} key={book.id} />
          ))}
        </div>
      </div>
    </div>
  );
};

// Generated by ChatGPT
function arrayContainsSubstring(arr, substring) {
  // Iterate over the array of strings
  for (let str of arr) {
    // Check if the current string contains the substring
    if (str.indexOf(substring) >= 0) {
      // If it does, return true
      return true;
    }
  }

  // If none of the strings contain the substring, return false
  return false;
}

// Generated by ChatGPT
function arrayOfObjectsContainsSubstring(arr, substring) {
  // Iterate over the array of objects
  for (let obj of arr) {
    // Iterate over the values in each object
    for (let value of Object.values(obj)) {
      // Check if the current value is a string and contains the substring
      if (typeof value === "string" && value.indexOf(substring) >= 0) {
        // If it does, return true
        return true;
      }
    }
  }

  // If none of the values contain the substring, return false
  return false;
}
